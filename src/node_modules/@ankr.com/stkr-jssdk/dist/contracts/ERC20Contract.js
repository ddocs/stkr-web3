"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ERC20Contract = void 0;
var BaseContract_1 = require("./BaseContract");
var ERC20Contract = /** @class */ (function (_super) {
    __extends(ERC20Contract, _super);
    function ERC20Contract() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.name = "ERC20";
        return _this;
    }
    /**
     * Name of contract
     */
    ERC20Contract.prototype.getName = function () {
        return this.name;
    };
    ERC20Contract.prototype.balanceOf = function (address) {
        return this.getContract().methods.balanceOf(address).call();
    };
    ERC20Contract.prototype.totalSupply = function () {
        return this.getContract().methods.totalSupply().call();
    };
    /**
     * Give *amount* allowance from sender to given address
     * @param address
     * @param amount
     * @param options
     */
    ERC20Contract.prototype.approve = function (address, amount, options) {
        return this.getContract().methods.approve(address, amount).send(options);
    };
    /**
     * Check allowance of *spender* from account *owner*
     * @param owner
     * @param spender
     */
    ERC20Contract.prototype.allowance = function (owner, spender) {
        return this.getContract().methods.allowance(owner, spender).call();
    };
    return ERC20Contract;
}(BaseContract_1.BaseContract));
exports.ERC20Contract = ERC20Contract;
//# sourceMappingURL=ERC20Contract.js.map