"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GovernanceEvents = exports.Governance = void 0;
var Governance_json_1 = __importDefault(require("./abi/Governance.json"));
var BaseContract_1 = require("./BaseContract");
var EventBase_1 = require("../EventBase");
var Governance = /** @class */ (function (_super) {
    __extends(Governance, _super);
    function Governance(web3, network) {
        var _this = _super.call(this, web3, network) || this;
        _this.abi = Governance_json_1.default;
        _this.events = new GovernanceEvents(_this.getContract());
        return _this;
    }
    Governance.prototype.getName = function () {
        return 'Governance';
    };
    Governance.prototype._userLocks = function (param0, param1, options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.getContract().methods['_userLocks'](param0, param1).call()];
            });
        });
    };
    Governance.prototype.allowAddressForFunction = function (addr, topic, options) {
        return this.getContract().methods['allowAddressForFunction'](addr, topic).send(options);
    };
    Governance.prototype.availableAmountForUnlock = function (user, options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.getContract().methods['availableAmountForUnlock'](user).call()];
            });
        });
    };
    Governance.prototype.availableDepositsOf = function (user, options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.getContract().methods['availableDepositsOf'](user).call()];
            });
        });
    };
    Governance.prototype.changeOperator = function (operator, options) {
        return this.getContract().methods['changeOperator'](operator).send(options);
    };
    Governance.prototype.cleanUserLocks = function (user, options) {
        return this.getContract().methods['cleanUserLocks'](user).send(options);
    };
    Governance.prototype.deposit = function (options) {
        return this.getContract().methods['deposit']().send(options);
    };
    Governance.prototype.deposit_1 = function (user, options) {
        return this.getContract().methods['deposit_1'](user).send(options);
    };
    Governance.prototype.depositsOf = function (user, options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.getContract().methods['depositsOf'](user).call()];
            });
        });
    };
    Governance.prototype.freeze = function (addr, amount, options) {
        return this.getContract().methods['freeze'](addr, amount).send(options);
    };
    Governance.prototype.frozenDepositsOf = function (user, options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.getContract().methods['frozenDepositsOf'](user).call()];
            });
        });
    };
    Governance.prototype.getConfig = function (key, addr, options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.getContract().methods['getConfig'](key, addr).call()];
            });
        });
    };
    Governance.prototype.getConfig_1 = function (key, options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.getContract().methods['getConfig_1'](key).call()];
            });
        });
    };
    Governance.prototype.getConfig_2 = function (key, index, options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.getContract().methods['getConfig_2'](key, index).call()];
            });
        });
    };
    Governance.prototype.getConfigAddress = function (key, index, options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.getContract().methods['getConfigAddress'](key, index).call()];
            });
        });
    };
    Governance.prototype.getConfigAddress_1 = function (key, options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.getContract().methods['getConfigAddress_1'](key).call()];
            });
        });
    };
    Governance.prototype.getConfigString = function (key, index, options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.getContract().methods['getConfigString'](key, index).call()];
            });
        });
    };
    Governance.prototype.getConfigString_1 = function (key, options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.getContract().methods['getConfigString_1'](key).call()];
            });
        });
    };
    Governance.prototype.go = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.getContract().methods['go']().call()];
            });
        });
    };
    Governance.prototype.isPaused = function (action, options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.getContract().methods['isPaused'](action).call()];
            });
        });
    };
    Governance.prototype.lockedDepositsOf = function (user, options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.getContract().methods['lockedDepositsOf'](user).call()];
            });
        });
    };
    Governance.prototype.owner = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.getContract().methods['owner']().call()];
            });
        });
    };
    Governance.prototype.renounceOwnership = function (options) {
        return this.getContract().methods['renounceOwnership']().send(options);
    };
    Governance.prototype.togglePause = function (action, options) {
        return this.getContract().methods['togglePause'](action).send(options);
    };
    Governance.prototype.transferOwnership = function (newOwner, options) {
        return this.getContract().methods['transferOwnership'](newOwner).send(options);
    };
    Governance.prototype.unfreeze = function (addr, amount, options) {
        return this.getContract().methods['unfreeze'](addr, amount).send(options);
    };
    Governance.prototype.withdraw = function (amount, options) {
        return this.getContract().methods['withdraw'](amount).send(options);
    };
    Governance.prototype.propose = function (Timespan, Topic, Content, options) {
        return this.getContract().methods['propose'](Timespan, Topic, Content).send(options);
    };
    Governance.prototype.vote = function (Id, Vote, options) {
        return this.getContract().methods['vote'](Id, Vote).send(options);
    };
    Governance.prototype.getVotes = function (Id, Vote, options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.getContract().methods['getVotes'](Id, Vote).call()];
            });
        });
    };
    Governance.prototype.finishProposal = function (Id, options) {
        return this.getContract().methods['finishProposal'](Id).send(options);
    };
    Governance.prototype.proposal = function (Id, options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.getContract().methods['proposal'](Id).call()];
            });
        });
    };
    Governance.prototype.changeConfiguration = function (key, value, options) {
        return this.getContract().methods['changeConfiguration'](key, value).send(options);
    };
    Governance.prototype.cancelProposal = function (Id, Reason, options) {
        return this.getContract().methods['cancelProposal'](Id, Reason).send(options);
    };
    return Governance;
}(BaseContract_1.BaseContract));
exports.Governance = Governance;
var GovernanceEvents = /** @class */ (function (_super) {
    __extends(GovernanceEvents, _super);
    function GovernanceEvents() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GovernanceEvents.prototype.getPastCompensate = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // @ts-ignore
                return [2 /*return*/, this.contract.getPastEvents('Compensate', options)];
            });
        });
    };
    GovernanceEvents.prototype.getPastConfigurationChanged = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // @ts-ignore
                return [2 /*return*/, this.contract.getPastEvents('ConfigurationChanged', options)];
            });
        });
    };
    GovernanceEvents.prototype.getPastDeposit = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // @ts-ignore
                return [2 /*return*/, this.contract.getPastEvents('Deposit', options)];
            });
        });
    };
    GovernanceEvents.prototype.getPastFreeze = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // @ts-ignore
                return [2 /*return*/, this.contract.getPastEvents('Freeze', options)];
            });
        });
    };
    GovernanceEvents.prototype.getPastOwnershipTransferred = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // @ts-ignore
                return [2 /*return*/, this.contract.getPastEvents('OwnershipTransferred', options)];
            });
        });
    };
    GovernanceEvents.prototype.getPastProposalFinished = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // @ts-ignore
                return [2 /*return*/, this.contract.getPastEvents('ProposalFinished', options)];
            });
        });
    };
    GovernanceEvents.prototype.getPastPropose = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // @ts-ignore
                return [2 /*return*/, this.contract.getPastEvents('Propose', options)];
            });
        });
    };
    GovernanceEvents.prototype.getPastUnfreeze = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // @ts-ignore
                return [2 /*return*/, this.contract.getPastEvents('Unfreeze', options)];
            });
        });
    };
    GovernanceEvents.prototype.getPastVote = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // @ts-ignore
                return [2 /*return*/, this.contract.getPastEvents('Vote', options)];
            });
        });
    };
    GovernanceEvents.prototype.getPastWithdraw = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // @ts-ignore
                return [2 /*return*/, this.contract.getPastEvents('Withdraw', options)];
            });
        });
    };
    GovernanceEvents.prototype.Compensate = function (options) {
        return this.contract.events.Compensate(options);
    };
    GovernanceEvents.prototype.ConfigurationChanged = function (options) {
        return this.contract.events.ConfigurationChanged(options);
    };
    GovernanceEvents.prototype.Deposit = function (options) {
        return this.contract.events.Deposit(options);
    };
    GovernanceEvents.prototype.Freeze = function (options) {
        return this.contract.events.Freeze(options);
    };
    GovernanceEvents.prototype.OwnershipTransferred = function (options) {
        return this.contract.events.OwnershipTransferred(options);
    };
    GovernanceEvents.prototype.ProposalFinished = function (options) {
        return this.contract.events.ProposalFinished(options);
    };
    GovernanceEvents.prototype.Propose = function (options) {
        return this.contract.events.Propose(options);
    };
    GovernanceEvents.prototype.Unfreeze = function (options) {
        return this.contract.events.Unfreeze(options);
    };
    GovernanceEvents.prototype.Vote = function (options) {
        return this.contract.events.Vote(options);
    };
    GovernanceEvents.prototype.Withdraw = function (options) {
        return this.contract.events.Withdraw(options);
    };
    return GovernanceEvents;
}(EventBase_1.EventBase));
exports.GovernanceEvents = GovernanceEvents;
//# sourceMappingURL=Governance.js.map