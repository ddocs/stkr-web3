"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ANKRContract = void 0;
var ANKR_json_1 = __importDefault(require("./abi/ANKR.json"));
var ERC20Contract_1 = require("./ERC20Contract");
var ANKRContract = /** @class */ (function (_super) {
    __extends(ANKRContract, _super);
    function ANKRContract() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.abi = ANKR_json_1.default;
        _this.name = "ANKR";
        return _this;
    }
    // ** ONLY FOR TESTNET
    // Gives 100k ANKR Token
    ANKRContract.prototype.faucet = function (options) {
        return this.getContract().methods.faucet().send(options);
    };
    // Gives 5m ANKR Token
    ANKRContract.prototype.faucet5m = function (options) {
        return this.getContract().methods.faucet5m().send(options);
    };
    return ANKRContract;
}(ERC20Contract_1.ERC20Contract));
exports.ANKRContract = ANKRContract;
//# sourceMappingURL=ANKRContract.js.map