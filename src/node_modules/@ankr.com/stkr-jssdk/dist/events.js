"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GovernanceEvents = exports.GlobalPoolEvents = exports.EventBase = void 0;
var EventBase = /** @class */ (function () {
    function EventBase(contract) {
        this.contract = contract;
    }
    return EventBase;
}());
exports.EventBase = EventBase;
var GlobalPoolEvents = /** @class */ (function (_super) {
    __extends(GlobalPoolEvents, _super);
    function GlobalPoolEvents() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GlobalPoolEvents.prototype.getPastPoolOnGoing = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // @ts-ignore
                return [2 /*return*/, this.contract.getPastEvents('PoolOnGoing', options)];
            });
        });
    };
    GlobalPoolEvents.prototype.getPastProviderExited = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // @ts-ignore
                return [2 /*return*/, this.contract.getPastEvents('ProviderExited', options)];
            });
        });
    };
    GlobalPoolEvents.prototype.getPastProviderToppedUpAnkr = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // @ts-ignore
                return [2 /*return*/, this.contract.getPastEvents('ProviderToppedUpAnkr', options)];
            });
        });
    };
    GlobalPoolEvents.prototype.getPastProviderToppedUpEth = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // @ts-ignore
                return [2 /*return*/, this.contract.getPastEvents('ProviderToppedUpEth', options)];
            });
        });
    };
    GlobalPoolEvents.prototype.getPastProviderSlashedAnkr = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // @ts-ignore
                return [2 /*return*/, this.contract.getPastEvents('ProviderSlashedAnkr', options)];
            });
        });
    };
    GlobalPoolEvents.prototype.getPastProviderSlashedEth = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // @ts-ignore
                return [2 /*return*/, this.contract.getPastEvents('ProviderSlashedEth', options)];
            });
        });
    };
    GlobalPoolEvents.prototype.getPastRewardClaimed = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // @ts-ignore
                return [2 /*return*/, this.contract.getPastEvents('RewardClaimed', options)];
            });
        });
    };
    GlobalPoolEvents.prototype.getPastStakeConfirmed = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // @ts-ignore
                return [2 /*return*/, this.contract.getPastEvents('StakeConfirmed', options)];
            });
        });
    };
    GlobalPoolEvents.prototype.getPastStakePending = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // @ts-ignore
                return [2 /*return*/, this.contract.getPastEvents('StakePending', options)];
            });
        });
    };
    GlobalPoolEvents.prototype.getPastStakeRemoved = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // @ts-ignore
                return [2 /*return*/, this.contract.getPastEvents('StakeRemoved', options)];
            });
        });
    };
    GlobalPoolEvents.prototype.PoolOnGoing = function (options) {
        return this.contract.events.PoolOnGoing(options);
    };
    GlobalPoolEvents.prototype.ProviderExited = function (options) {
        return this.contract.events.ProviderExited(options);
    };
    GlobalPoolEvents.prototype.ProviderToppedUpAnkr = function (options) {
        return this.contract.events.ProviderToppedUpAnkr(options);
    };
    GlobalPoolEvents.prototype.ProviderToppedUpEth = function (options) {
        return this.contract.events.ProviderToppedUpEth(options);
    };
    GlobalPoolEvents.prototype.ProviderSlashedAnkr = function (options) {
        return this.contract.events.ProviderSlashedAnkr(options);
    };
    GlobalPoolEvents.prototype.ProviderSlashedEth = function (options) {
        return this.contract.events.ProviderSlashedEth(options);
    };
    GlobalPoolEvents.prototype.RewardClaimed = function (options) {
        return this.contract.events.RewardClaimed(options);
    };
    GlobalPoolEvents.prototype.StakeConfirmed = function (options) {
        return this.contract.events.StakeConfirmed(options);
    };
    GlobalPoolEvents.prototype.StakePending = function (options) {
        return this.contract.events.StakePending(options);
    };
    GlobalPoolEvents.prototype.StakeRemoved = function (options) {
        return this.contract.events.StakeRemoved(options);
    };
    return GlobalPoolEvents;
}(EventBase));
exports.GlobalPoolEvents = GlobalPoolEvents;
var GovernanceEvents = /** @class */ (function (_super) {
    __extends(GovernanceEvents, _super);
    function GovernanceEvents() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GovernanceEvents.prototype.getPastProposalFinished = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // @ts-ignore
                return [2 /*return*/, this.contract.getPastEvents('ProposalFinished', options)];
            });
        });
    };
    GovernanceEvents.prototype.getPastVote = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // @ts-ignore
                return [2 /*return*/, this.contract.getPastEvents('Vote', options)];
            });
        });
    };
    GovernanceEvents.prototype.getPastPropose = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // @ts-ignore
                return [2 /*return*/, this.contract.getPastEvents('Propose', options)];
            });
        });
    };
    GovernanceEvents.prototype.ProposalFinished = function (options) {
        return this.contract.events.ProposalFinished(options);
    };
    GovernanceEvents.prototype.Vote = function (options) {
        return this.contract.events.Vote(options);
    };
    GovernanceEvents.prototype.Propose = function (options) {
        return this.contract.events.Propose(options);
    };
    return GovernanceEvents;
}(EventBase));
exports.GovernanceEvents = GovernanceEvents;
//# sourceMappingURL=events.js.map