import { BlockchainNetworkId, IGovernance, Proposal, VoteStatus } from '../types';
import { GlobalPoolEvents } from '../events';
import Web3 from 'web3';
import { Contract, SendOptions } from 'web3-eth-contract';
import { PromiEvent } from 'web3-core';
import { BaseContract } from './BaseContract';
export declare class GovernanceContract extends BaseContract implements IGovernance {
    readonly events: GlobalPoolEvents;
    abi: any;
    constructor(web3: Web3, network: BlockchainNetworkId);
    getName(): string;
    vote(proposalId: string, vote: VoteStatus, options?: SendOptions): PromiEvent<Contract>;
    propose(timeSpan: number, topic: string, content: string, options?: SendOptions): PromiEvent<Contract>;
    proposal(proposalId: string): Promise<Proposal>;
}
