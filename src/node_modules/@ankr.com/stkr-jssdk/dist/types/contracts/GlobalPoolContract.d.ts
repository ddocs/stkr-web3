import { BlockchainNetworkId, IGlobalPool } from '../types';
import { GlobalPoolEvents } from '../events';
import Web3 from 'web3';
import { Contract, SendOptions } from 'web3-eth-contract';
import { PromiEvent } from 'web3-core';
import * as BN from 'bn.js';
import { BaseContract } from './BaseContract';
export declare class GlobalPoolContract extends BaseContract implements IGlobalPool {
    readonly events: GlobalPoolEvents;
    abi: any;
    constructor(web3: Web3, network: BlockchainNetworkId);
    getName(): string;
    /**
     * Stake given amount for user
     * @param options
     */
    stake(options: SendOptions): PromiEvent<Contract>;
    /**
     * Claim user's rewards
     * @param options
     */
    claim(options?: SendOptions): PromiEvent<Contract>;
    /**
     * Unstake user's pending balance
     * @param options
     */
    unstake(options?: SendOptions): PromiEvent<Contract>;
    /**
     * Get claimable balance of user
     * @param address
     */
    claimableBalance(address: string): Promise<BN>;
}
